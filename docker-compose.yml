name: inkflow-ai

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: inkflow-postgres
    environment:
      POSTGRES_DB: inkflow
      POSTGRES_USER: inkflow
      POSTGRES_PASSWORD: inkflow123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - inkflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U inkflow"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: inkflow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - inkflow-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inkflow-backend
    environment:
      - APP_NAME=InkFlow AI
      - APP_VERSION=1.0.0
      - DEBUG=false
      - DATABASE_URL=postgresql://inkflow:inkflow123@postgres:5432/inkflow
      - REDIS_URL=redis://redis:6379/0
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=gemini-1.5-flash
      - API_PREFIX=/api
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://frontend
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - MAX_CHAPTER_LENGTH=2000
      - MIN_CHAPTER_LENGTH=500
      - CHOICES_COUNT=3
    ports:
      - "20001:20001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - inkflow-network
    volumes:
      - ./backend:/app

  # 前端页面服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inkflow-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - inkflow-network
    environment:
      - VITE_API_BASE_URL=http://localhost:20001

volumes:
  postgres_data:
  redis_data:

networks:
  inkflow-network:
    driver: bridge